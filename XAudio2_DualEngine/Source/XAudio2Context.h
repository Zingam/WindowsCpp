#pragma once
///////////////////////////////////////////////////////////////////////////////
// C++ Library inclusions
///////////////////////////////////////////////////////////////////////////////
#include <list>
#include <memory>
///////////////////////////////////////////////////////////////////////////////
// Project inclusions
///////////////////////////////////////////////////////////////////////////////
#include "XAudio2Engine.h"
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Linked libraries
///////////////////////////////////////////////////////////////////////////////
#pragma comment(lib, "XAudio2.lib")
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// Forward declarations
///////////////////////////////////////////////////////////////////////////////
struct IXAudio2;
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// Class declarations
///////////////////////////////////////////////////////////////////////////////

///
/// Initializes XAudio2 environment
///
class XAudio2Context final
{
public:
    XAudio2Context(XAudio2Context const& xAudio2Context) = delete;
    XAudio2Context(XAudio2Context&& xAudio2Context);

    ~XAudio2Context();

public:
    XAudio2Context& operator=(XAudio2Context const& xAudio2Context) = delete;
    XAudio2Context& operator=(XAudio2Context&& xAudio2Context);

public:
    static XAudio2Context& CreateXAudio2Context();

public:
    XAudio2Engine& CreateXAudio2Engine();
    bool IsInitialized();

private:
    XAudio2Context();

private:
    static std::unique_ptr<XAudio2Context> s_XAudio2Context;

private:
    bool m_IsInitialized;
    std::list<XAudio2Engine> m_XAudio2Engines;
};
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// Inline methods
///////////////////////////////////////////////////////////////////////////////

///
/// IsInitalized
///
inline
bool
XAudio2Context::IsInitialized() { return m_IsInitialized; }
///////////////////////////////////////////////////////////////////////////////
