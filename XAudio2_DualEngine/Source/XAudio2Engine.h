#pragma once
///////////////////////////////////////////////////////////////////////////////
// C++ Library inclusions
///////////////////////////////////////////////////////////////////////////////
#include <vector>
///////////////////////////////////////////////////////////////////////////////
// System Library inclusions
///////////////////////////////////////////////////////////////////////////////
#include <Windows.h>
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// Forward declarations
///////////////////////////////////////////////////////////////////////////////
struct IXAudio2;
struct IXAudio2MasteringVoice;
struct IXAudio2SourceVoice;
///////////////////////////////////////////////////////////////////////////////
class XAudio2Context;
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// Class declarations
///////////////////////////////////////////////////////////////////////////////

///
/// XAudio2Engine container
///
class XAudio2Engine
{
public:
    ~XAudio2Engine();

public:
    XAudio2Engine(XAudio2Engine const& xAudio2Engine) = delete;
    XAudio2Engine(XAudio2Engine&& xAudio2Engine);

public:
    XAudio2Engine& operator=(XAudio2Engine const& xAudio2Engine) = delete;
    XAudio2Engine& operator=(XAudio2Engine&& xAudio2Engine);

public:
    IXAudio2SourceVoice* GetSourceVoice(WAVEFORMATEX const* format);
    bool IsInitialized();

private:
    friend class XAudio2Context;

private:
    XAudio2Engine();

private:
    bool m_IsInitialized;
    IXAudio2* m_XAudio2Engine;
    IXAudio2MasteringVoice* m_MasteringVoice;
    std::vector<IXAudio2SourceVoice*> m_SourceVoices;
};
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// Inline methods
///////////////////////////////////////////////////////////////////////////////

inline
bool
XAudio2Engine::IsInitialized() { return m_IsInitialized; }
///////////////////////////////////////////////////////////////////////////////
